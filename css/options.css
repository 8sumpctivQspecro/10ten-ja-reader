/*
 * Reproduce some styles from Firefox's browser_styles for other browsers' sake
 */
:root:not(.firefox) * {
  box-sizing: border-box;
}

/*
 * Chrome's embedded options page seems to make the window too narrow.
 */
:root.chrome {
  min-width: 700px;
}

/*
 * If we are using Firefox's browser styles for headings, drop the extra margin
 * we'd otherwise add for headings.
 */
:root.firefox h2 {
  margin-top: 0;
  margin-bottom: 0;
}

#rikaichamp_options,
#rikaichamp_options td {
  padding: 0 10px;
  font-family: sans-serif;
  font-size: 10pt;
}

.checkbox-row {
  display: flex;
  flex-direction: row;
  align-items: start;
}
.checkbox-row > :not(input) {
  margin-inline-start: 6px;
  margin-top: 4px;
  flex: 1;
}

.panel-section-grid {
  /*
   * This actually messes up the ordering but it turns out what we want to do is
   * not possible with CSS Grid (like pretty much everything I've ever tried to
   * do with CSS Grid).
   *
   *   https://stackoverflow.com/questions/44869250/responsive-multi-column-list-with-column-order
   */
  display: grid;
  width: 100%;
  max-width: 1000px;
  grid-template-columns: repeat(auto-fill, 250px);
  grid-column-gap: 1em;
  margin: 16px;
}

fieldset {
  border: none;
}

.popupstyle-select {
  display: flex;
  width: 100%;
}

.popupstyle-select > input[type=radio] {
  display: none;
}

.popupstyle-select > label {
  border: 1px solid transparent;
  transition: border-color 0.3s, opacity 0.3s;
  padding: 0.5em;
  flex: 1;
  text-align: center;
}

.popupstyle-select > input[type=radio]:checked + label {
  border-color: grey;
  background: lightgrey;
}

.popupstyle-select > input[type=radio]:not(:checked) + label {
  opacity: 0.5;
}
.popupstyle-select > input[type=radio]:not(:checked) + label:hover,
.popupstyle-select > input[type=radio]:not(:checked) + label:active {
  opacity: 1;
}

#rikaichamp-window.popup-preview {
  position: static;
  display: inline-block;
}

.key-grid {
  display: grid;
  grid-template-columns: minmax(12em, auto) 1fr;
}
.key label span {
  /*
   * Make the labels actually sit in the centre of the keys.
   */
  display: inline-flex;
  flex-direction: column;
  justify-content: center;

  margin-inline-end: 1em;
  min-width: 2.5em;
}
.key label span, .key input[type=text] {
  font-size: 1rem;
  height: 2.5rem;
  padding: .5rem;
  text-align: center;
  border-radius: .7rem;
  background: white;
}
.key label span {
  border: 1px solid #909090;
  border-bottom-color: grey;
  border-bottom-width: 3px;
  /* For text boxes, we let browser styles define the border color */
}
.key input[type=text] {
  border-bottom-width: 3px !important;
  width: 6em;

  /*
   * Hide the caret
   */
  color: transparent;
  text-shadow: 0 0 0 black;
}
.key input[type=text]:disabled:hover {
  /*
   * We shouldn't need this but extensions.css 'disabled' selector is broken.
   *
   * See: https://bugzilla.mozilla.org/show_bug.cgi?id=1484501
   */
  border-color: #b1b1b1;
}
/*
 * When the textbox is in a chrome page, it gets an extra inner div as anonymous
 * content so we need to make sure that gets centered too or else extensions.css
 * will reset it to text-align: start.
 *
 * Actually... this doesn't work. It looks like Web Extensions are not allowed
 * to style anonymous content so there is no way for us to override the styles
 * set by extensions.css which _is_ allowed to style it.
 *
 * See https://bugzilla.mozilla.org/show_bug.cgi?id=1484502
 */
.key input[type=text] > .anonymous-div {
  text-align: center;
}
.key input[type=checkbox] {
  /*
   * Drop the margin on checkboxes so they actually line up with the text.
   */
  margin-top: 0;
}
/*
 * Make unselected checkboxes lighter so it's easier to read the resulting
 * shortcut.
 */
.key input[type=checkbox]:not(:checked) + label span {
  opacity: 0.6;
  border-style: dashed;
  border-bottom-style: solid;
}
.key-description {
  padding: .5rem;
  /*
   * This magic number makes the baseline of the first line line-up with the
   * labels on the keys.
   */
  padding-block-start: 0.8rem;
  padding-inline-start: 1.5rem;
}
.key-description .icon {
  display: inline-block;
  vertical-align: top;
  margin-top: -0.25rem;
  margin-left: 0.5rem;
  width: 1.5rem;
  height: 1.5rem;
  background-size: cover;
  background-repeat: no-repeat;
}
.key-description .icon.-warning {
  background-image: url("/images/warning-yellow.svg");
}
.key-description .icon.-error {
  background-image: url("/images/warning-red.svg");
}
