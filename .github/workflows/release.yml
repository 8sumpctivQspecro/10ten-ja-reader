name: Release
on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: Run tests
        run: |
          yarn install
          yarn build
          yarn test

      - name: Build assets
        run: |
          yarn package
          yarn package:chrome
          yarn zip-src

      - name: Read package version
        id: read_package_version
        uses: ./.github/actions/read-package-version

      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: ${{ steps.read_package_version.outputs.prerelease }}

      - name: Upload Firefox asset
        id: upload_firefox_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist-firefox-package/${{ steps.read_package_version.outputs.firefox_package_name }}
          asset_name: ${{ steps.read_package_version.outputs.firefox_package_name }}
          asset_content_type: application/zip

      - name: Upload Chrome asset
        id: upload_chrome_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist-chrome-package/${{ steps.read_package_version.outputs.chrome_package_name }}
          asset_name: ${{ steps.read_package_version.outputs.chrome_package_name }}
          asset_content_type: application/zip

      - name: Upload source ZIP
        id: upload_source_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist-src/rikaichamp-${{ steps.read_package_version.outputs.version }}-src.zip
          asset_name: rikaichamp-${{ steps.read_package_version.outputs.version }}-src.zip
          asset_content_type: application/zip

      - name: Show Release URL
        run: echo "View and publish the release at: ${{ steps.create_release.outputs.html_url }}"
